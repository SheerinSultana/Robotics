/*Lcd        (ground,vcc,sda,scl)                            
sda=a4
scl=a5

Rfid
sda=10
sck=13
mosi=11
miso=12
rst=9

Switch
v=8
nv=7

Servo
v=6
nv=5

Led
A0
4
3
2*/

#include <SPI.h>                                               
#include <MFRC522.h>
 #include <Wire.h> 
 #include <Servo.h>
Servo myservo; 
#include <LiquidCrystal_I2C.h>
#define RST_PIN 9
#define SS_PIN 10
#define v 8
#define nv 7
Servo snv ;
Servo sv ;

MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
 LiquidCrystal_I2C lcd(0x27,20,4);  // set the LCD address to 0x27 for a 16 chars and 2 line display
void setup() 
{pinMode(v,INPUT_PULLUP);pinMode(nv,INPUT_PULLUP);

  Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  Serial.println("Approximate your card to the reader...");
  Serial.println();
lcd.init();                      // initialize the lcd 
  lcd.init();
  // Print a message to the LCD.
  lcd.backlight();
}
void loop() 
{lcd.setCursor(0,0);
  lcd.print("Scan RFID tag &");
  lcd.setCursor(0,1);
  lcd.print("Select Veg/N-Veg ");
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "07 C8 34 1B") //change here the UID of the card/cards that you want to give access
  {lcd.clear();
    lcd.setCursor(0,0);
  lcd.print("Access granted");
  lcd.setCursor(0,1);
  lcd.print("Select Veg/N-Veg ");
    Serial.println("Authorized access");
  
    delay(800);lcd.clear();
    lcd.setCursor(0,0);
  lcd.print("Press button");delay(500);
    for(int i=0;i<100000;i++){
      
    if (digitalRead(v)==LOW){  Serial.println("dsfgh");
sv.attach(6); 
sv.write(170);
delay(1100);
sv.detach();          // tell servo to go to position in variable 'pos'
    delay(5000);break;}
    
 if (digitalRead(nv)==LOW){ Serial.println("dsfgh");snv.attach(5);snv.write(170);
delay(1100);
snv.detach();          // tell servo to go to position in variable 'pos'
    delay(5000); break;}
    
    }}
 
 else   {lcd.clear();
    lcd.setCursor(0,0);
  lcd.print("Access denied");
    Serial.println(" Access denied");
    delay(1000);
  }
}
